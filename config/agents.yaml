agents:
  - id: "orderAgent"
    name: "Detailed Production Scheduler Agent"
    description: "URS-compliant detailed scheduler - handles production order planning, material availability, regulatory checks, and release decisions"
    trigger: "ask-today-orders"
    type: "analytical"
    oeeEnabled: true
    oeeEnhanced: true
    dataSource:
      - "mock-data/orders.json"
      - "mock-data/bom.json"
      - "mock-data/inventory.json"
      - "mock-data/issues.json"
      - "mock-data/batches.json"
      - "mock-data/compliance.json"
      - "mock-data/qa.json"
    
    a2aCapabilities:
      - "analyzeOrders"
      - "checkMaterialAvailability"
      - "validateProductionReadiness"
      - "assessOrderImpact"
    
    a2aPrompts:
      analyzeOrders: |
        Analyze production orders for A2A workflow with OEE context.
        Focus: {orderId} or all open orders.
        Include OEE metrics for production line efficiency assessment.
        Return JSON: {"ordersAnalyzed": number, "criticalIssues": [...], "readyForProduction": [...], "blocked": [...], "oeeImpact": {...}}
      checkMaterialAvailability: |
        Check material availability for order {orderId} with OEE optimization.
        Cross-Reference: BOM + Inventory + Batch Status + OEE efficiency.
        Return JSON: {"available": true/false, "shortages": [...], "alternatives": [...], "estimatedAvailability": "date", "oeeOptimization": {...}}
      validateProductionReadiness: |
        Validate production readiness for {orderId} including OEE considerations.
        Check: QA Status, Compliance, Equipment, Materials, OEE trends.
        Return JSON: {"ready": true/false, "blockingIssues": [...], "eta": "date", "recommendations": [...], "oeeProjection": {...}}
      assessOrderImpact: |
        Assess impact of order {orderId} on overall production with OEE analysis.
        Return JSON: {"impact": "HIGH/MEDIUM/LOW", "affectedOrders": [...], "resourceConflicts": [...], "oeeImpact": {...}}
    
    events:
      publishes: 
        - "orders/analyzed"
        - "orders/ready_for_release"
        - "orders/blocked"
        - "material/shortage_detected"
        - "regulatory/check_required"
        - "oee/optimization_required"
      subscribes: 
        - "orders/updated"
        - "oee/updated"
        - "inventory/updated"
        - "issues/updated"
        - "batches/updated"
        - "qc/inspection_completed"
    
    promptTemplate: |
      ROLE: Production Scheduler (URS-compliant, OEE-optimized)
      TIME: {timestamp}
      REQUEST: {userMessage}
      DATA: {data}
      
      WORKFLOW:
      1. Load orders.json → Cross-reference with BOM, inventory, batches
      2. Validate via issues.json, qa.json, compliance.json  
      3. Apply URS protocols (FR-001 to FR-012) + OEE optimization
      4. Generate release decisions with safety priority
      
      OUTPUT: Use format_production_schedule
      SAFETY: If uncertain → escalate, never assume

  - id: "briefingAgent"
    name: "Executive Operations Briefing Agent" 
    description: "URS-compliant comprehensive daily operations summary with cross-system analysis including OEE metrics"
    trigger: "morning-briefing"
    type: "analytical"
    oeeEnabled: true
    dataSource:
      - "mock-data/orders.json"
      - "mock-data/issues.json"
      - "mock-data/batches.json"
      - "mock-data/inventory.json"
      - "mock-data/compliance.json"
      - "mock-data/bom.json"
      - "mock-data/qa.json"
    
    a2aCapabilities:
      - "generateExecutiveBriefing"
      - "summarizeOperations"
      - "identifyTrends"
      - "createActionPlan"
    
    a2aPrompts:
      generateExecutiveBriefing: |
        Create executive briefing for {date} including OEE performance summary.
        Return JSON: {"summary": "...", "criticalAlerts": [...], "recommendations": [...], "kpis": {...}, "oeeMetrics": {...}}
      summarizeOperations: |
        Summarize daily operations across all systems with OEE insights.
        Return JSON: {"productionStatus": "...", "issueCount": number, "compliance": "...", "trends": [...], "oeePerformance": {...}}
      identifyTrends: |
        Identify operational trends and patterns including OEE trends.
        Return JSON: {"trends": [...], "riskFactors": [...], "improvements": [...], "oeeOptimization": [...]}
      createActionPlan: |
        Create action plan based on current situation and OEE data.
        Return JSON: {"immediate": [...], "shortTerm": [...], "longTerm": [...], "oeeActions": [...]}
    
    events:
      publishes: ["briefing/generated", "executive/summary", "oee/analysis"]
      subscribes: ["orders/updated", "issues/updated", "batch/assessed", "compliance/checked", "oee/updated"]
    
    promptTemplate: |
      ROLE: Executive Briefing Specialist (Pharma + OEE Analytics)
      TIME: {timestamp}
      REQUEST: {userMessage}
      DATA: {data}
      
      ANALYZE: Orders, batches, issues, compliance, QA → Cross-system insights
      FOCUS: Critical alerts, KPIs, trends, OEE performance
      
      OUTPUT: Use format_executive_briefing
      PRIORITY: Patient safety, regulatory compliance

  - id: "assessmentAgent"
    name: "Advanced Batch Release Assessment Agent"
    description: "URS-compliant production batch release assessment with regulatory and quality validation plus OEE impact analysis"
    trigger: "general-assessment"
    type: "analytical"
    oeeEnabled: true
    dataSource: 
      - "mock-data/batches.json"
      - "mock-data/compliance.json"
      - "mock-data/qa.json"
      - "mock-data/issues.json"
      - "mock-data/inventory.json"
    
    a2aCapabilities:
      - "assessBatchImpact"
      - "evaluateRisk"
      - "generateReleaseRecommendation"
      - "validateBatchCompliance"
    
    a2aPrompts:
      assessBatchImpact: |
        Assess impact of batch {batchId} on production flow including OEE implications.
        Return JSON: {"impact": "HIGH/MEDIUM/LOW", "affectedOrders": [...], "recommendations": [...], "timeline": "...", "oeeImpact": {...}}
      evaluateRisk: |
        Perform risk assessment for batch {batchId} with OEE risk factors.
        Return JSON: {"riskLevel": "...", "factors": [...], "mitigations": [...], "probability": "...", "oeeRisk": {...}}
      generateReleaseRecommendation: |
        Generate release recommendation for batch {batchId} considering OEE optimization.
        Return JSON: {"recommendation": "RELEASE/HOLD/BLOCK", "reasoning": "...", "conditions": [...], "oeeOptimization": {...}}
      validateBatchCompliance: |
        Validate regulatory compliance for batch {batchId} including OEE compliance.
        Return JSON: {"compliant": true/false, "gaps": [...], "actions": [...], "oeeCompliance": {...}}
    
    events:
      publishes: ["batch/assessed", "batch/ready_for_release", "batch/blocked", "oee/batch_impact"]
      subscribes: ["issues/updated", "compliance/checked", "qa/completed", "oee/updated"]
    
    promptTemplate: |
      ROLE: Batch Release Assessment (URS + OEE)
      TIME: {timestamp}
      REQUEST: {userMessage}
      DATA: {data}
      
      ASSESS: batches.json → Quality, compliance, production flow + OEE impact
      VALIDATE: Regulatory requirements, safety constraints
      
      OUTPUT: Use format_batch_assessment
      RULE: Safety first, escalate if uncertain

  - id: "complianceAgent"
    name: "Regulatory Compliance & Audit Agent"
    description: "Advanced regulatory compliance monitoring with GMP, FDA, EMA validation and audit trail including OEE compliance aspects"
    trigger: "compliance-check"
    type: "data-driven"
    oeeEnabled: true
    dataSource: 
      - "mock-data/batches.json"
      - "mock-data/compliance.json"
      - "mock-data/issues.json"
      - "mock-data/orders.json"
      - "mock-data/qa.json"
    
    a2aCapabilities:
      - "validateOrder"
      - "checkCompliance"
      - "generateAuditReport"
      - "assessRegulatoryRisk"
    
    a2aPrompts:
      validateOrder: |
        Check order {orderId} for GMP/FDA/EMA compliance including OEE compliance standards.
        Return JSON: {"compliant": true/false, "findings": [...], "riskLevel": "LOW/MEDIUM/HIGH/CRITICAL", "oeeCompliance": {...}}
      checkCompliance: |
        Comprehensive compliance check for {entity} including OEE regulatory aspects.
        Return JSON: {"status": "COMPLIANT/AT_RISK/NON_COMPLIANT", "issues": [...], "actions": [...], "oeeCompliance": {...}}
      generateAuditReport: |
        Create audit report for {scope} including OEE compliance assessment.
        Return JSON: {"auditScore": number, "findings": [...], "recommendations": [...], "timeline": "...", "oeeAudit": {...}}
      assessRegulatoryRisk: |
        Assess regulatory risk for {entity} including OEE-related compliance risks.
        Return JSON: {"risk": "...", "impact": "...", "mitigation": [...], "oeeRisk": {...}}
    
    events:
      publishes: ["compliance/checked", "audit/finding", "regulatory/alert", "oee/compliance_status"]
      subscribes: ["batch/assessed", "orders/analyzed", "oee/updated", "*"]
    
    promptTemplate: |
      ROLE: Regulatory Compliance & Audit (GMP/FDA/EMA + OEE)
      TIME: {timestamp}
      REQUEST: {userMessage}
      DATA: {data}
      
      CHECK: Batches, orders → GMP compliance, regulatory status + OEE standards
      VALIDATE: Documentation, audit readiness, equipment effectiveness
      
      OUTPUT: Use format_compliance_report
      PRIORITY: Patient safety, regulatory requirements

  - id: "statusAgent"
    name: "Integrated System Status & Monitoring Agent"
    description: "Comprehensive system status with real-time monitoring across all production, quality, and compliance systems including OEE dashboard"
    trigger: "system-status"
    type: "conversational"
    oeeEnabled: true
    dataSource:
      - "mock-data/orders.json"
      - "mock-data/issues.json"
      - "mock-data/batches.json"
      - "mock-data/inventory.json"
      - "mock-data/compliance.json"
      - "mock-data/bom.json"
      - "mock-data/qa.json"
    
    a2aCapabilities:
      - "updateSystemStatus"
      - "generateDashboard"
      - "monitorHealth"
      - "analyzePerformance"
    
    a2aPrompts:
      updateSystemStatus: |
        Update system status based on {event} including OEE impact.
        Return JSON: {"status": "...", "affectedSystems": [...], "actions": [...], "severity": "...", "oeeImpact": {...}}
      generateDashboard: |
        Create real-time dashboard for {scope} with OEE metrics.
        Return JSON: {"metrics": {...}, "alerts": [...], "health": "...", "trends": [...], "oeeMetrics": {...}}
      monitorHealth: |
        Monitor overall system health including OEE performance.
        Return JSON: {"healthScore": number, "criticalIssues": [...], "trends": [...], "oeeHealth": {...}}
      analyzePerformance: |
        Analyze system performance metrics including OEE analysis.
        Return JSON: {"performance": {...}, "bottlenecks": [...], "optimization": [...], "oeeOptimization": [...]}
    
    events:
      publishes: ["system/status", "monitoring/alert", "oee/status"]
      subscribes: ["*"]
    
    promptTemplate: |
      ROLE: System Status & Monitoring (Integrated + OEE Analytics)
      TIME: {timestamp}
      REQUEST: {userMessage}
      DATA: {data}
      
      MONITOR: All systems → Production, quality, compliance + OEE metrics
      ANALYZE: Health scores, alerts, trends, equipment effectiveness
      
      OUTPUT: Use format_system_status
      FOCUS: Real-time insights, actionable recommendations

  - id: "helpAgent"
    name: "URS System Navigation & Help Agent"
    description: "Comprehensive guidance for URS-compliant pharmaceutical production system usage including OEE optimization help"
    trigger: "help"
    type: "conversational"
    oeeEnabled: false
    dataSource: null
    
    a2aCapabilities:
      - "provideHelp"
      - "explainWorkflow"
      - "guideTroubleshooting"
      - "trainUser"
    
    a2aPrompts:
      provideHelp: |
        Provide help for {topic} including OEE-related guidance.
        Return JSON: {"guidance": "...", "steps": [...], "references": [...], "oeeHelp": [...]}
      explainWorkflow: |
        Explain workflow {workflowName} including OEE optimization aspects.
        Return JSON: {"description": "...", "steps": [...], "prerequisites": [...], "oeeConsiderations": [...]}
      guideTroubleshooting: |
        Guide troubleshooting for {issue} including OEE impact assessment.
        Return JSON: {"diagnosis": "...", "solutions": [...], "escalation": "...", "oeeImpact": "..."}
      trainUser: |
        Provide training for {feature} including OEE optimization training.
        Return JSON: {"training": "...", "examples": [...], "bestPractices": [...], "oeeTraining": [...]}
    
    events:
      publishes: ["help/requested", "training/initiated"]
      subscribes: []
    
    promptTemplate: |
      ROLE: System Help & Navigation (URS + OEE Guidance)
      TIME: {timestamp}
      REQUEST: {userMessage}
      
      PROVIDE: System guidance, workflow help, troubleshooting
      FOCUS: URS compliance, OEE optimization, user training
      
      OUTPUT: Clear instructions and examples
      APPROACH: Helpful, educational, comprehensive